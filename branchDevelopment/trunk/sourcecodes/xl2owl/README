xl2owl - Version 0.1

Performs 2-way conversion between OWL format and tab-delimited text
(for import into spreadsheet).

SYNOPSIS

Running from the source code:

perl xl2owl.pl -a [options]

Running an executable:

xl2owl -a [options]


OPTIONS

    --action|-a     Action to perform. Options are:
                    1 - Add terms to OWL file from tab-delimited text
                    2 - Create tab-delimited text from OWL

    --tabin|-ti     tab-delimited input: Name of the tab-delimited file which
                    to add/convert to OWL output file

    --tabout|-to    tab-delimited output: Name of the tab-delimited file to
                    create from the OWL input

    --owlin|-oi	    OWL input: Name of the OWL file from which terms/headers
                    should be extracted

    --owlout|-oo    OWL output: Name of the OWL file to create or add terms to

    --delimiter|-d  Delimiter used in the tab-delimited file [defalut = TAB]

    --del_empty|-r  Do not include annotation properties that are empty in the
                    owl output file

    --help|-h       Print this help screen


The user must always specify an action.  Following is a brief descritpion of
each action and their required and optional parameters.

1) Add terms to an OWL file from tab-delimed file
Required parameters: --tabin, --owlin, --owlout

2) Create a tab-delimited file from OWL
Required parameters: --owlin, --tabout


TAB-DELIMITED FORMAT

Note that in order to take terms from a tab-delimited file and place them into
an OWL file, they must be in the following format:

class	URI	label	parent_class	parent_URI	parent_label	....

Here is an explanation of each field:

1) class - the Class ID (This is what comes after the # in the URI)
2) URI - the base URI (This is what comes before the # in the URI)
3) label - the rfds:label
4) parent_class - Class ID of the term's parent
5) URI - base URI of the term's parent
6) label - rdfs:label of the term's parent

After the first six columns, the fields are up to the user.  Please see
Example.txt for reference.


EXAMPLES

1) Adding terms to an OWL file:

xl2owl -a 1 -ti Protocols.txt -oi Protocols.owl -oo Protocols.owl

In this example, the input and output OWL files are the same.

2) Extracting terms from an OWL file:

xl2owl -a 2 -oi Protocols.owl -to Protocols.txt

Here, all terms from the Protocols.owl file will be extracted and place into the
Protocols.txt file in tab-delimited format.


NOTES

1) PLEASE BE SAFE AND BACKUP ANY FILES YOU WILL BE MODIFIYTING WITH THIS TOOL!

2) When extracting terms from an OWL file, any OWL restrictions will not be
represented in the resulting tab-delimited file.  Instead, they will be
preserved as XML in a file with a ".xtra" extension.  If the tab-delimited file
is later converted back into OWL, this .xtra file will be read and the OWL
restrictions will be incorporated into the resulting OWL file.

3) In OWL, it is possible for a term to have more than one property with an
identical name.  This presents a problem for representation in tab-delimited for
mat.  This program circumvents this problem by creating a column for the maximum
number of times a property exists in any given term.  For example, there can be
3 editor_note fields in one term and 0 in another.  If the maxmimum number of
editor_note fields in any term within the OWL file was 3, then there will be 3
columns created in the tab-delimited file to accomodate this.


DEPENDENCIES

Data::Dumper
Getopt::Long
Switch
File::Copy
XML::Simple
Encode


BUGS

I'm sure there are plenty.  Please report anything you notice to Jay Greenbaum
(jgbaum@gmail.com).