January 24, 2007

Jennifer, Bjoern, Allyson, Trish, Liju, Ryan, Bill, Chris, Gilberto, Tina

+ Bill would like to see the demos on Monday morning, but he’s not there then. Perhaps they could be shown again other evenings for the BIRN folks. He’s interested in all of them.
+ Liju is showing us what the OWL file looks like after the reasoner.
+ Entity comes from BFO, and is defined as the union of continuant and occurrent. In this, OBI and BFO match.
+ The direct children of continuant are also a good match in OBI, and there are no problems.
+ However, the children of independent_continuant contain some OBI terms, which does not agree with BFO (physical_entity, data_set and document). This needs to be resolved.
+ Last week we had difficulties with document and its children, record and protocol_document.
+ Document is not in object as it isn’t just the physical piece of paper/object that exists in the real world. (Bill)
+ Jennifer says we shouldn’t split hairs and that a document is self-contained and should belong there.
+ Liju reminds us that we need to separate out the document and the information contained in it.
+ Bjoern: why did we want it in OBI? We wanted it for its children, i.e. what was done in the study (protocol_document).
+ Bill suggests that we put this question to BFO, however we need to get ourselves sorted before we contact BFO.
+ Bjoern suggests we just need the information-defining part of document: we don’t care about its physical representation.
+ The BFO “object” definitely means physical object, even though that word “physical” is not present in the definition.
+ Liju mentions that, if we don’t care about its physical aspects, that perhaps it isn’t an independent continuant at all, but instead may be a dependent continuant.
+ Information clearly doesn’t fit with the definition of independent continuant (which has as examples and definitions things that are clearly physical).
+ We won’t use the word "document" to prevent confusion.
+ Bill says that it seems clear that “record/information of running a protocol” is a dependent continuant.
+ Quality and realizable entity are the only two children allowed of dependent continuant.
+ The same place we put protocol information is the place we can put software and its illegal siblings.
+ Perhaps it would belong under realizable entity.
+ Bill says we should trust one person/group of people to sort out the illegal siblings, and then come back into the whole group for the final OK.
+ We should go through a couple examples at the workshop so that people know how to go about making these changes.
+ Bjoern suggests that we may need a top-level term added to BFO (specification/information) that we put a number of our terms under, and then we can bring that + to BFO.
+ Volunteers for helping with reconciliation with BFO: Bill, Liju and perhaps also Daniel (who isn’t on the call). Before the workshop? Yes, something by Monday if possible, even if it isn’t perfect.
+ Bjoern: under a new term “specification” goes data format, software, etc.
+ Process for people to follow when moving a term to suit BFO:
   - We need examples for OBI terms so we can be sure what we’re talking about
   - First try to group our stuff that belongs under specification, and then we try to place specification, perhaps under realizable entity (for now at least). If this is where it would go, we would need to bring this up with BFO.
   - Go through all existing BFO terms, either finding a location for a term, or determining that there is no correct term we can use as a parent
+ Under realizable entity are three “legal” children: disposition, function and role. None of these fit what we mean when we talk about a specification term.

Actions to the OWL file:
+ Term: specification. Definition: A realizable entity that describes a set of actions (maybe not broad enough). Definition_source: OBI. Curation_status: graph position temporary. Editor_note: refer back to the design_specification definition and try to broaden that. Children: software, data format, design specification, the children of document but not document itself (protocol document and record). Examples: ? Use Case: ?
+ Allyson will make a first stab at definition and examples (3 examples), and get back to the list tomorrow.