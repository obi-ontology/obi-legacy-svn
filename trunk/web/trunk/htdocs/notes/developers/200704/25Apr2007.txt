Developers Call - 25Apr2007

Agenda: 
-OBI Branch files - generation and usage--Batch term loading code
--SVN::Notify - preference for email list to post to-Policy to collect relations - Postpone until next week-Annotation properties
--definition_source, see DueCredit for implementation requirements 
--term provenance -tools/software directory for OBI SVN?

Participants: Trish Whetzel (TW), Kevin Clancy (KC), Bill Bug (BB), Alan Ruttenberg (AR), Daniel Schober (DS), Liju Fan (LF), Allyson Lister (AL), Philippe Rocca-Serra (PRS), Gilberto Fragoso (GF)

Excused: Jennifer Fostel (JF), Chris Stoeckert (CS), Helen Parkinson (HP)

=-=-=-=-=
LF - Policy to collect relations - Propose for next week
Would like to get more OBI developers on this branch.
BB - would like to join, very connected to OBI Roles branch

-OBI Branch files - generation and usage
Summary
LF - Protege release 141 has an extract function which allows children and siblings to be extracted from an ontology, the files that have been generated are one that is active for editing for each branch and a complimentary file so that it is a pair of files that a given branch needs to load into Protege
TW - question is the whether each ObiBranch should have a pair of files or if each 'branch' should be a separate owl file and therefore the branch group would need to import all other branch files?

LF - Protege only allows a one-time merge, can not import a second ontology. 
AR - have you tried just adding another import line in the text file?
LF - no, have not tried that. would like to solve this for the branches
BB - there are two different tasks, splitting the files and then putting them back together
AR - if it only imports a single file, then you could make a separate branch file that contains the rest, complimentary version of OBI
LF - haven't figured out how to save the merged file
AR - that can be done with emacs
BB - there may be branch specific things in the file
AR - this is related to my previous proposal
BB - probably need something more airtight to pass on information that is branch specific

TW - timeline for creating the branch files? should the individual files that you generated by put into SVN, including one for the core and possibly the RO?
LF - discussion of OBI Core, what is this? everything but things that are actively editable?
All - yes
TW - should the 'single' files be committed to SVN?
LF/All - yes
TW - should the complimentary files be committed to SVN as well?
LF - would prefer that the complimentary file is committed as well.
TW - is that the agreement of the group, is everyone aware of the pros/cons of this?

DS - the complimentary files are not needed, should import the latest files that are in the SVN. when you open your branch files then you should see the newest for all.
LF - there are overlaps
AL - if there are overlaps, then this fails
LF - there are overlaps, the higher level classes
AL - think that it is important to see real-time changes 
LF - can only import one
DS - this should not be an issue
BB - orthogonality, there will be dependencies between branches that will need to be addressed
LF - we need to review the Relations ontology and communicate with this group
TW - is that the consensus of everyone, to commit the existing files?
All - Yes
DS - so as I understand the 'rest' will be replaced with the single files
AR - the individual files and the compliments are ready, check those in and then replace the others with the single files that imports the single files and core. since people will seeing these imports, people should be generating a pellet report on these. send out a note that the files are in SVN and explain how people can check consistency
BB - sounds good, has this been done with the starting file?
LF - yes
BB - is this done in the context in BFO?
AR - we are already importing BFO
BB - the report should give us everything starting at the base of BFO. Annotation properties, the reason that this keeps us from OWL-DL is due to a bug in Protege, just need to run it every time, Protege makes this mistake every time the file is saved. If that is an issue, we can implement an automatic process to fix this.

LF - just checked that the current OBI owl file is OWL-Full
AR - this should be only because of the annotation properties
TW - do you still have concerns if OBI is classified as OWL-Full due only to annotation properties?
AR - if that is the only reason then that is ok

BB - what do we want to be OWL-DL or OWL-Full and how do we stay in OWL-DL if this is what we want
TW - my recollection is that if it because of annotation properties then that is ok
BB - how do we guarantee this?
TW - you mentioned that BIRN had a process
BB - yes there is a process, but what will be the process/workflow for OBI
AR/TW - generate a pellet report before committing the file, it is ok if only annotation properties cause it to be in OWL-Full. in the short-term, make plans to implement the process that BIRN is using

--SVN::Notify - preference for email list to post to
All - set-up a separate list for the SVN::Notify - TW Action Item

-Annotation properties
--definition_source, see DueCredit for implementation requirements
TW - does anyone remember if an implementation was proposed for this?
All - no
TW - hopefully we can address in the next couple of weeks--term provenance 
TW - propose at a minimum that as Master term lists are generated for each branch that the information as to the community that proposed the term be maintained. The motivation is so that 'views' can be added to the ontology if needed later for implementation of the ontology for use by various software applications.
All- yes, this info can be maintained in the term list
Action Item - TW send more formal proposal
-tools/software directory for OBI SVN?
TW - are there any objections to setting up a tools directory in the OBI SVN so that 
All-no objections


TW - As a reminder there are a few Milestones coming up, term deprecation and linking to external ontologies
AR - propose that the term deprecation policy be pushed to later
TW - what was the deadline
AL - July 9
AR - has anyone started working on that, are there work milestones?
TW - the policy that the MGED Ontology and that of BRIN are fairly similar so I am hoping that this will not be too difficult to get consensus on from OBI
AR - how does this fit with the OBO policy, they put terms under the parent Deprecated Class or Deprecated Property in OWL
TW - is that their policy or from the translation from OBO to OWL, there are some translation issues, use of oboInOWL properties that do not seem ideal to me regarding interoperability.
AR - ok, then sounds like this is ok to leave for the July Milestone

End of call
=-=-=-=-=-=-=























